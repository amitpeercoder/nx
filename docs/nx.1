.TH NX 1 "2024-12-15" "nx 0.2.0" "User Commands"
.SH NAME
nx \- high-performance CLI notes application with AI integration
.SH SYNOPSIS
.B nx
[\fIOPTIONS\fR] \fICOMMAND\fR [\fIARGS\fR...]
.SH DESCRIPTION
.B nx
is a high-performance command-line notes application built with modern C++ that provides fast, local-first note management with optional AI integration. It supports Markdown notes with YAML front-matter, full-text search, notebook organization, and synchronization via Git.
.PP
Features include hierarchical notebook organization, file attachments, template system, import/export capabilities, and a terminal user interface (TUI) for interactive note management.
.SH OPTIONS
.TP
.BR \-h ", " \-\-help
Show help message and exit
.TP
.BR \-\-version
Display program version information and exit
.TP
.BR \-\-help\-all
Expand all help text for commands
.TP
.BR \-\-json
Output results in JSON format
.TP
.BR \-v ", " \-\-verbose
Enable verbose output
.TP
.BR \-q ", " \-\-quiet
Suppress normal output
.TP
.BR \-\-config " " \fIFILE\fR
Path to configuration file
.TP
.BR \-\-notes\-dir " " \fIDIR\fR
Override notes directory location
.TP
.BR \-\-no\-color
Disable colored output
.SH COMMANDS
.SS "Note Management"
.TP
.BR "new " [\fITITLE\fR] " " [\fIOPTIONS\fR]
Create a new note with optional title and metadata
.RS
.TP
.BR \-\-tags " " \fITAGS\fR
Comma-separated list of tags
.TP
.BR \-\-nb " " \fINOTEBOOK\fR
Assign note to specific notebook
.TP
.BR \-\-template " " \fINAME\fR
Create note from template
.RE
.TP
.BR "edit " \fINOTE_ID\fR
Edit note in $EDITOR or configured editor
.TP
.BR "view " \fINOTE_ID\fR " " [\fIOPTIONS\fR]
Display note content
.RS
.TP
.BR \-\-json
Output note in JSON format
.RE
.TP
.BR "ls " [\fIOPTIONS\fR]
List notes with filtering options
.RS
.TP
.BR \-\-tag " " \fITAG\fR
Filter by tag
.TP
.BR \-\-nb " " \fINOTEBOOK\fR
Filter by notebook
.TP
.BR \-\-since " " \fIDATE\fR
Show notes modified since date (ISO-8601 format)
.TP
.BR \-\-limit " " \fIN\fR
Limit number of results
.RE
.TP
.BR "rm " \fINOTE_ID\fR
Remove a note (moves to trash)
.TP
.BR "mv " \fINOTE_ID\fR " " \-\-nb " " \fINOTEBOOK\fR
Move note to different notebook
.TP
.BR "open " \fIFUZZY_QUERY\fR
Fuzzy find and open note for editing
.SS "Search and Discovery"
.TP
.BR "grep " \fIQUERY\fR " " [\fIOPTIONS\fR]
Search note content using full-text search
.RS
.TP
.BR \-\-regex
Treat query as regular expression
.TP
.BR \-\-content
Search content only (exclude titles)
.RE
.TP
.BR "backlinks " \fINOTE_ID\fR
Show notes that link to specified note
.TP
.BR "tags " [\fIOPTIONS\fR]
List all tags with usage counts
.RS
.TP
.BR \-\-sort " " \fIMODE\fR
Sort by 'name' or 'count'
.RE
.SS "Notebook Management"
.TP
.BR "notebook list " [\fIOPTIONS\fR]
List all notebooks
.RS
.TP
.BR \-\-json
Output in JSON format
.RE
.TP
.BR "notebook create " \fINAME\fR " " [\fIDESCRIPTION\fR]
Create new notebook
.TP
.BR "notebook rename " \fIOLD_NAME\fR " " \fINEW_NAME\fR
Rename existing notebook
.TP
.BR "notebook delete " \fINAME\fR " " [\fIOPTIONS\fR]
Delete notebook
.RS
.TP
.BR \-\-force
Force deletion even if notebook contains notes
.RE
.TP
.BR "notebook info " \fINAME\fR
Show detailed notebook information
.SS "File Attachments"
.TP
.BR "attach " \fINOTE_ID\fR " " \fIFILE_PATH\fR " " [\fIOPTIONS\fR]
Attach file to note
.RS
.TP
.BR \-\-name " " \fINAME\fR
Custom name for attachment
.TP
.BR \-\-copy
Copy file instead of moving
.RE
.SS "Templates"
.TP
.BR "tpl list"
List available templates
.TP
.BR "tpl add " \fINAME\fR " " [\fIOPTIONS\fR]
Create new template
.RS
.TP
.BR \-\-file " " \fIFILE\fR
Create template from file
.TP
.BR \-\-desc " " \fIDESCRIPTION\fR
Template description
.RE
.TP
.BR "tpl remove " \fINAME\fR
Remove template
.SS "Import and Export"
.TP
.BR "import dir " \fIPATH\fR " " [\fIOPTIONS\fR]
Import notes from directory
.RS
.TP
.BR \-\-recursive
Import subdirectories
.TP
.BR \-\-nb " " \fINOTEBOOK\fR
Target notebook for imported notes
.TP
.BR \-\-format " " \fIFORMAT\fR
Source format (obsidian, notion, markdown)
.RE
.TP
.BR "export " \fIFORMAT\fR " " [\fIOPTIONS\fR]
Export notes to various formats
.RS
.TP
.BR \-\-to " " \fIDIR\fR
Output directory
.TP
.BR \-\-since " " \fIDATE\fR
Export notes modified since date
.PP
Supported formats: md, json, pdf, html
.RE
.SS "Metadata Management"
.TP
.BR "meta " \fINOTE_ID\fR " " [\fIOPTIONS\fR]
View or modify note metadata
.RS
.TP
.BR \-\-set " " \fIKEY=VALUE\fR
Set metadata key-value pair
.TP
.BR \-\-remove " " \fIKEY\fR
Remove metadata key
.TP
.BR \-\-list
List all metadata keys
.RE
.SS "System Maintenance"
.TP
.BR "reindex " \fIACTION\fR " " [\fIOPTIONS\fR]
Rebuild and optimize search index
.RS
.TP
.BR \-\-force
Force rebuild without confirmation
.PP
Actions: rebuild, optimize, validate, stats
.RE
.TP
.BR "backup " \fIACTION\fR " " [\fIFILE\fR] " " [\fIOPTIONS\fR]
Create and manage backups
.RS
.TP
.BR \-\-compress
Use compression for backups
.PP
Actions: create, list, restore, verify, cleanup
.RE
.TP
.BR "gc " \fIACTION\fR " " [\fIOPTIONS\fR]
Garbage collection and storage optimization
.RS
.TP
.BR \-\-dry\-run
Show what would be done without making changes
.TP
.BR \-\-force
Skip confirmation prompts
.PP
Actions: cleanup, optimize, vacuum, stats, all
.RE
.TP
.BR "doctor " [\fIOPTIONS\fR]
Run comprehensive system health checks and diagnostics
.RS
.TP
.BR \-\-fix
Attempt to fix issues automatically
.TP
.BR \-v \", \" \-\-verbose
Show detailed output for all checks
.TP
.BR \-q \", \" \-\-quick
Run only essential checks (faster)
.TP
.BR \-c \", \" \-\-category \" \" \fICATEGORY\fR
Run checks for specific category (config, storage, git, tools, performance)
.RE
.SS "AI Features"
.TP
.BR "ask " \fIQUESTION\fR
Ask questions over note collection using AI
.TP
.BR "summarize " \fINOTE_ID\fR " " [\fIOPTIONS\fR]
Generate AI summary of note
.RS
.TP
.BR \-\-style " " \fISTYLE\fR
Summary style (bullets, paragraph, outline)
.TP
.BR \-\-apply
Apply summary to note
.RE
.TP
.BR "tag\-suggest " \fINOTE_ID\fR " " [\fIOPTIONS\fR]
Suggest tags for note using AI
.RS
.TP
.BR \-\-apply
Apply suggested tags to note
.RE
.TP
.BR "title " \fINOTE_ID\fR " " [\fIOPTIONS\fR]
Suggest better titles using AI
.RS
.TP
.BR \-\-apply
Apply suggested title to note
.RE
.TP
.BR "rewrite " \fINOTE_ID\fR " " [\fIOPTIONS\fR]
Rewrite note content with different tone
.RS
.TP
.BR \-\-tone " " \fITONE\fR
Writing tone (professional, casual, crisp, academic)
.TP
.BR \-\-apply
Apply rewritten content to note
.RE
.TP
.BR "tasks " \fINOTE_ID\fR " " [\fIOPTIONS\fR]
Extract action items and tasks from note
.RS
.TP
.BR \-\-priority " " \fILEVEL\fR
Filter by priority (high, medium, low)
.RE
.TP
.BR "suggest\-links " \fINOTE_ID\fR " " [\fIOPTIONS\fR]
Find and suggest links to related notes
.RS
.TP
.BR \-\-apply
Apply suggested links to note
.RE
.TP
.BR "outline " \fITOPIC\fR " " [\fIOPTIONS\fR]
Generate hierarchical outline for topic
.RS
.TP
.BR \-\-create
Create notes from outline sections
.RE
.SS "Interactive Interface"
.TP
.BR "ui"
Launch interactive Terminal User Interface (TUI)
.SH FILE FORMAT
Notes are stored as Markdown files with optional YAML front-matter:
.PP
.RS
.nf
---
id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
created: 2024-01-15T10:30:00Z
modified: 2024-01-15T14:22:00Z
tags: [work, project, important]
notebook: work-notes
---

# Note Title

Note content in **Markdown** format...

## Section

- List item
- Another item

[Link to another note](01BX5ZZKBKACTAV9WEVGEMMVR0.md)
.fi
.RE
.SH CONFIGURATION
Configuration is stored in TOML format at:
.PP
.RS
.B ~/.config/nx/config.toml
.RE
.PP
Example configuration:
.PP
.RS
.nf
[notes]
directory = "~/Documents/notes"
default_notebook = "inbox"

[editor]
command = "nvim"

[ai]
provider = "openai"
api_key_file = "~/.config/nx/openai_key"

[search]
engine = "sqlite"

[sync]
enabled = true
remote_url = "git@github.com:user/notes.git"
auto_push = false
auto_pull = true
.fi
.RE
.SH ENVIRONMENT VARIABLES
.TP
.B EDITOR
Default editor for note editing (overridden by config)
.TP
.B VISUAL
Visual editor (takes precedence over EDITOR)
.TP
.B XDG_CONFIG_HOME
Configuration directory base (default: ~/.config)
.TP
.B XDG_DATA_HOME
Data directory base (default: ~/.local/share)
.TP
.B NX_CONFIG
Path to configuration file
.TP
.B NX_NOTES_DIR
Notes directory location
.SH EXIT STATUS
.TP
.B 0
Success
.TP
.B 1
General error (invalid arguments, file not found, etc.)
.TP
.B 2
Configuration error
.TP
.B 3
Network error (AI features, sync)
.TP
.B 4
Permission denied
.SH EXAMPLES
.TP
Create a new note with tags:
.B nx new "Meeting Notes" --tags work,meeting --nb projects
.TP
List recent work notes:
.B nx ls --tag work --since 2024-01-01
.TP
Search for algorithm-related content:
.B nx grep "algorithm" --regex
.TP
Edit a note:
.B nx edit 01ARZ3NDEKTSV4RRFFQ69G5FAV
.TP
Import Obsidian vault:
.B nx import dir ~/Documents/ObsidianVault --format obsidian --recursive
.TP
Create backup:
.B nx backup create ~/backups/notes-$(date +%Y%m%d).tar.gz --compress
.TP
Launch TUI:
.B nx ui
.TP
Ask AI about notes:
.B nx ask "What did I learn about machine learning?"
.TP
Generate summary:
.B nx summarize 01ARZ3 --style bullets --apply
.TP
Clean up storage:
.B nx gc all --force
.TP
Run system health check:
.B nx doctor --quick
.SH FILES
.TP
.B ~/.config/nx/config.toml
Main configuration file
.TP
.B ~/.local/share/nx/
Data directory containing notes and index
.TP
.B ~/.local/share/nx/notes/
Default notes directory
.TP
.B ~/.local/share/nx/attachments/
File attachments storage
.TP
.B ~/.local/share/nx/templates/
Note templates
.TP
.B ~/.local/share/nx/search.db
SQLite full-text search index
.TP
.B ~/.cache/nx/
Temporary files and cache
.SH PERFORMANCE
.B nx
is designed for high performance with large note collections:
.PP
.RS
- Note operations: P95 < 100ms on 10,000 notes
- Search queries: P95 < 200ms
- Full reindex: < 45 seconds on mid-range laptop
- Memory usage: < 100MB for typical operations
.RE
.SH SECURITY
When encryption is enabled:
.PP
.RS
- Uses age/rage encryption for individual files
- No plaintext written to persistent storage
- Keys stored with 0600 permissions
- Atomic file operations prevent corruption
.RE
.SH BUGS
Report bugs at: https://github.com/user/nx/issues
.SH AUTHOR
Written by the nx development team.
.SH SEE ALSO
.BR git (1),
.BR grep (1),
.BR rg (1),
.BR jq (1),
.BR age (1)
.PP
Full documentation: https://nx-notes.dev/docs
.SH COPYRIGHT
This is free software; see the source for copying conditions.