.TH NX 1 "2025-08-17" "nx 1.0.0" "User Commands"
.SH NAME
nx \- high-performance CLI notes application with AI integration
.SH SYNOPSIS
.B nx
[\fIOPTIONS\fR] \fICOMMAND\fR [\fIARGS\fR...]
.SH DESCRIPTION
.B nx
is a high-performance command-line notes application built with modern C++ that provides fast, local-first note management with optional AI integration. It supports Markdown notes with YAML front-matter, full-text search, notebook organization, and synchronization via Git.
.PP
Features include automatic title derivation from the first line of content, hierarchical notebook organization, file attachments, template system, import/export capabilities, and a terminal user interface (TUI) for interactive note management.
.SH OPTIONS
.TP
.BR \-h ", " \-\-help
Show help message and exit
.TP
.BR \-\-version
Display program version information and exit
.TP
.BR \-\-help\-all
Expand all help text for commands
.TP
.BR \-\-json
Output results in JSON format
.TP
.BR \-v ", " \-\-verbose
Enable verbose output
.TP
.BR \-q ", " \-\-quiet
Suppress normal output
.TP
.BR \-\-config " " \fIFILE\fR
Path to configuration file
.TP
.BR \-\-notes\-dir " " \fIDIR\fR
Override notes directory location
.TP
.BR \-\-no\-color
Disable colored output
.SH COMMANDS
.SS "Note Management"
.TP
.BR "new " [\fIOPTIONS\fR]
Create a new note (title will be automatically derived from the first line of content)
.RS
.TP
.BR \-\-tags " " \fITAGS\fR
Comma-separated list of tags
.TP
.BR \-\-nb " " \fINOTEBOOK\fR
Assign note to specific notebook
.TP
.BR \-\-template " " \fINAME\fR
Create note from template
.RE
.TP
.BR "edit " \fINOTE_ID\fR
Edit note in $EDITOR or configured editor
.TP
.BR "view " \fINOTE_ID\fR " " [\fIOPTIONS\fR]
Display note content
.RS
.TP
.BR \-\-json
Output note in JSON format
.RE
.TP
.BR "ls " [\fIOPTIONS\fR]
List notes with filtering options
.RS
.TP
.BR \-\-tag " " \fITAG\fR
Filter by tag
.TP
.BR \-\-nb " " \fINOTEBOOK\fR
Filter by notebook
.TP
.BR \-\-since " " \fIDATE\fR
Show notes modified since date (ISO-8601 format)
.TP
.BR \-\-limit " " \fIN\fR
Limit number of results
.RE
.TP
.BR "rm " \fINOTE_ID\fR
Remove a note (moves to trash)
.TP
.BR "mv " \fINOTE_ID\fR " " \-\-nb " " \fINOTEBOOK\fR
Move note to different notebook
.TP
.BR "open " \fIFUZZY_QUERY\fR
Fuzzy find and open note for editing
.SS "Search and Discovery"
.TP
.BR "grep " \fIQUERY\fR " " [\fIOPTIONS\fR]
Search note content using full-text search
.RS
.TP
.BR \-\-regex
Treat query as regular expression
.TP
.BR \-\-content
Search content only (exclude titles)
.RE
.TP
.BR "backlinks " \fINOTE_ID\fR
Show notes that link to specified note
.TP
.BR "tags " [\fIOPTIONS\fR]
List all tags with usage counts
.RS
.TP
.BR \-\-sort " " \fIMODE\fR
Sort by 'name' or 'count'
.RE
.SS "Notebook Management"
.TP
.BR "notebook list " [\fIOPTIONS\fR]
List all notebooks
.RS
.TP
.BR \-\-json
Output in JSON format
.RE
.TP
.BR "notebook create " \fINAME\fR " " [\fIDESCRIPTION\fR]
Create new notebook
.TP
.BR "notebook delete " \fINAME\fR " " [\fIOPTIONS\fR]
Delete notebook
.RS
.TP
.BR \-\-force
Force deletion even if notebook contains notes
.RE
.TP
.BR "notebook info " \fINAME\fR
Show detailed notebook information
.SS "File Attachments"
.TP
.BR "attach " \fINOTE_ID\fR " " \fIFILE_PATH\fR " " [\fIOPTIONS\fR]
Attach file to note
.RS
.TP
.BR \-\-name " " \fINAME\fR
Custom name for attachment
.TP
.BR \-\-copy
Copy file instead of moving
.RE
.SS "Templates"
.TP
.BR "tpl list"
List available templates
.TP
.BR "tpl show " \fINAME\fR
Show template content and details
.TP
.BR "tpl create " \fINAME\fR " " [\fIOPTIONS\fR]
Create new template
.RS
.TP
.BR \-\-from\-file " " \fIFILE\fR
Create template from file
.TP
.BR \-\-description " " \fIDESCRIPTION\fR
Template description
.TP
.BR \-\-category " " \fICATEGORY\fR
Template category
.TP
.BR \-\-force
Overwrite existing template
.RE
.TP
.BR "tpl edit " \fINAME\fR
Edit existing template in external editor
.TP
.BR "tpl delete " \fINAME\fR
Delete template
.TP
.BR "tpl use " \fINAME\fR " " [\fIOPTIONS\fR]
Create note from template
.RS
.TP
.BR \-\-vars " " \fIKEY=VALUE\fR
Template variables
.RE
.TP
.BR "tpl search " \fIQUERY\fR
Search templates by name or content
.TP
.BR "tpl install"
Install built-in templates
.SS "Import and Export"
.TP
.BR "import dir " \fIPATH\fR " " [\fIOPTIONS\fR]
Import notes from directory
.RS
.TP
.BR \-\-recursive
Import subdirectories
.TP
.BR \-\-nb " " \fINOTEBOOK\fR
Target notebook for imported notes
.TP
.BR \-\-format " " \fIFORMAT\fR
Source format (obsidian, notion, markdown)
.RE
.TP
.BR "export " \fIFORMAT\fR " " [\fIOPTIONS\fR]
Export notes to various formats
.RS
.TP
.BR \-\-to " " \fIDIR\fR
Output directory
.TP
.BR \-\-since " " \fIDATE\fR
Export notes modified since date
.PP
Supported formats: md, json, pdf, html
.RE
.SS "Metadata Management"
.TP
.BR "meta " \fINOTE_ID\fR " " [\fIOPTIONS\fR]
View or modify note metadata
.RS
.TP
.BR \-\-set " " \fIKEY=VALUE\fR
Set metadata key-value pair
.TP
.BR \-\-remove " " \fIKEY\fR
Remove metadata key
.TP
.BR \-\-list
List all metadata keys
.RE
.SS "System Maintenance"
.TP
.BR "reindex " \fIACTION\fR " " [\fIOPTIONS\fR]
Rebuild and optimize search index
.RS
.TP
.BR \-\-force
Force rebuild without confirmation
.PP
Actions: rebuild, optimize, validate, stats
.RE
.TP
.BR "backup " \fIACTION\fR " " [\fIFILE\fR] " " [\fIOPTIONS\fR]
Create and manage backups
.RS
.TP
.BR \-\-compress
Use compression for backups
.PP
Actions: create, list, restore, verify, cleanup
.RE
.TP
.BR "gc " \fIACTION\fR " " [\fIOPTIONS\fR]
Garbage collection and storage optimization
.RS
.TP
.BR \-\-dry\-run
Show what would be done without making changes
.TP
.BR \-\-force
Skip confirmation prompts
.PP
Actions: cleanup, optimize, vacuum, stats, all
.RE
.TP
.BR "doctor " [\fIOPTIONS\fR]
Run comprehensive system health checks and diagnostics
.RS
.TP
.BR \-\-fix
Attempt to fix issues automatically
.TP
.BR \-v \", \" \-\-verbose
Show detailed output for all checks
.TP
.BR \-q \", \" \-\-quick
Run only essential checks (faster)
.TP
.BR \-c \", \" \-\-category \" \" \fICATEGORY\fR
Run checks for specific category (config, storage, git, tools, performance)
.RE
.SS "AI Features"
.TP
.BR "ask " \fIQUESTION\fR
Ask questions over note collection using AI
.TP
.BR "summarize " \fINOTE_ID\fR " " [\fIOPTIONS\fR]
Generate AI summary of note
.RS
.TP
.BR \-\-style " " \fISTYLE\fR
Summary style (bullets, paragraph, outline)
.TP
.BR \-\-apply
Apply summary to note
.RE
.TP
.BR "tag\-suggest " \fINOTE_ID\fR " " [\fIOPTIONS\fR]
Suggest tags for note using AI
.RS
.TP
.BR \-\-apply
Apply suggested tags to note
.RE
.TP
.BR "rewrite " \fINOTE_ID\fR " " [\fIOPTIONS\fR]
Rewrite note content with different tone
.RS
.TP
.BR \-\-tone " " \fITONE\fR
Writing tone (professional, casual, crisp, academic)
.TP
.BR \-\-apply
Apply rewritten content to note
.RE
.TP
.BR "tasks " \fINOTE_ID\fR " " [\fIOPTIONS\fR]
Extract action items and tasks from note
.RS
.TP
.BR \-\-priority " " \fILEVEL\fR
Filter by priority (high, medium, low)
.RE
.TP
.BR "suggest\-links " \fINOTE_ID\fR " " [\fIOPTIONS\fR]
Find and suggest links to related notes
.RS
.TP
.BR \-\-apply
Apply suggested links to note
.RE
.TP
.BR "outline " \fITOPIC\fR " " [\fIOPTIONS\fR]
Generate hierarchical outline for topic
.RS
.TP
.BR \-\-create
Create notes from outline sections
.RE
.SS "Configuration Management"
.TP
.BR "config get " \fIKEY\fR
Get configuration value for specified key
.TP
.BR "config set " \fIKEY\fR " " \fIVALUE\fR
Set configuration value
.TP
.BR "config list"
List all configuration settings
.TP
.BR "config path"
Show configuration file path
.TP
.BR "config validate"
Validate current configuration
.TP
.BR "config reset " \fIKEY\fR
Reset configuration key to default value
.SS "Git Synchronization"
.TP
.BR "sync status"
Show current synchronization status
.TP
.BR "sync init " [\fIOPTIONS\fR]
Initialize Git repository for notes
.RS
.TP
.BR \-\-remote " " \fIURL\fR
Remote repository URL
.TP
.BR \-\-branch " " \fIBRANCH\fR
Initial branch name (default: main)
.RE
.TP
.BR "sync clone " \fIURL\fR " " [\fIOPTIONS\fR]
Clone remote repository
.RS
.TP
.BR \-\-branch " " \fIBRANCH\fR
Branch to clone (default: main)
.RE
.TP
.BR "sync pull " [\fIOPTIONS\fR]
Pull changes from remote repository
.RS
.TP
.BR \-\-strategy " " \fISTRATEGY\fR
Merge strategy (merge, rebase, fast-forward)
.TP
.BR \-\-no\-auto\-resolve
Disable automatic conflict resolution
.RE
.TP
.BR "sync push " [\fIOPTIONS\fR]
Push changes to remote repository
.RS
.TP
.BR \-\-force
Force push (use with caution)
.TP
.BR \-\-message " " \fIMESSAGE\fR
Commit message for sync
.RE
.TP
.BR "sync sync " [\fIOPTIONS\fR]
Bidirectional synchronization (pull + push)
.TP
.BR "sync resolve " [\fIOPTIONS\fR]
Resolve merge conflicts
.RS
.TP
.BR \-\-strategy " " \fISTRATEGY\fR
Resolution strategy (ours, theirs, manual)
.TP
.BR \-\-files " " \fIFILES\fR
Specific files to resolve
.RE
.SS "Interactive Interface"
.TP
.BR "ui"
Launch interactive Terminal User Interface (TUI)
.SH TUI KEYBOARD SHORTCUTS
The Terminal User Interface supports the following keyboard shortcuts:
.SS "Editor Mode"
.TP
.BR "Ctrl+S"
Save current note
.TP
.BR "Ctrl+Z"
Undo last operation
.TP
.BR "Ctrl+Y"
Redo last operation
.TP
.BR "Esc"
Exit editor mode
.SS "AI Features (Phase 1-2)"
.TP
.BR "Ctrl+Q"
Generate brief AI explanation for term before cursor
.TP
.BR "Ctrl+E"
Expand brief explanation to detailed explanation
.TP
.BR "Ctrl+W"
Smart completion based on context and content
.TP
.BR "Ctrl+G"
Grammar & style check with configurable preferences
.TP
.BR "S"
Semantic search - find notes by meaning, not keywords
.TP
.BR "Ctrl+X"
Generate smart examples for concepts and terms
.TP
.BR "Ctrl+C"
Code generation from natural language descriptions
.TP
.BR "Ctrl+U"
Smart summarization of entire note
.SS "AI Features (Phase 3)"
.TP
.BR "Ctrl+R"
Note relationships analysis - discover connections
.TP
.BR "Ctrl+H"
Content enhancement suggestions
.TP
.BR "Ctrl+O"
Smart organization recommendations
.TP
.BR "Ctrl+A"
Research assistant for topic exploration
.TP
.BR "Ctrl+B"
Writing coach with comprehensive feedback
.SS "AI Features (Phase 4)"
.TP
.BR "Ctrl+G"
Smart content generation based on topic and context
.TP
.BR "Ctrl+T"
Intelligent template suggestions based on content analysis
.TP
.BR "Ctrl+I"
Cross-note insights - find patterns across notes
.TP
.BR "Ctrl+N"
Smart search enhancement with AI-powered expansion
.TP
.BR "Alt+3"
Smart note merging - detect consolidation opportunities
.SS "AI Features (Phase 5)"
.TP
.BR "Ctrl+F1"
Workflow orchestrator - automate multi-step processes
.TP
.BR "Ctrl+F2"
Project structure analyzer - analyze and improve organization
.TP
.BR "Ctrl+F3"
Learning path generator - create structured learning plans
.TP
.BR "Ctrl+F4"
Knowledge synthesizer - combine insights from multiple notes
.TP
.BR "Ctrl+F5"
Journal pattern analyzer - discover temporal patterns and insights
.SS "AI Features (Phase 6)"
.TP
.BR "F6"
Multi-modal analysis - analyze notes with attached images and documents
.TP
.BR "F7"
Voice integration - process voice commands for note operations (demo mode)
.TP
.BR "F8"
Contextual awareness - analyze reading patterns and suggest related content
.TP
.BR "F9"
Workspace AI - optimize note organization and suggest improvements
.TP
.BR "F10"
Predictive AI - predict user needs and provide proactive recommendations
.SS "AI Features (Phase 7)"
.TP
.BR "F11"
Collaborative AI - analyze team dynamics and suggest collaboration improvements
.TP
.BR "F12"
Knowledge Graphs - generate and visualize concept relationships across notes
.TP
.BR "Alt+1"
Expert Systems - get domain-specific advice and recommendations
.TP
.BR "Alt+2"
Intelligent Workflows - automate complex multi-step processes
.TP
.BR "Alt+4"
Meta-Learning - analyze learning patterns and optimize knowledge retention
.SS "Navigation"
.TP
.BR "h, ←"
Focus left pane (navigation/tags)
.TP
.BR "j, ↓"
Move down in current pane
.TP
.BR "k, ↑"
Move up in current pane
.TP
.BR "l, →"
Focus right pane (preview/edit)
.TP
.BR "Tab"
Cycle through panes
.SS "Actions"
.TP
.BR "n"
Create new note
.TP
.BR "e"
Edit selected note
.TP
.BR "d"
Delete selected note
.TP
.BR "/"
Start search mode
.TP
.BR ":"
Open command palette
.TP
.BR "?"
Toggle help modal
.TP
.BR "q"
Quit application
.SH FILE FORMAT
Notes are stored as Markdown files with optional YAML front-matter:
.PP
.RS
.nf
---
id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
created: 2024-01-15T10:30:00Z
modified: 2024-01-15T14:22:00Z
tags: [work, project, important]
notebook: work-notes
---

# Meeting Notes - Project Alpha Review

Note content in **Markdown** format...
(Title is automatically derived from first line)

## Section

- List item
- Another item

[Link to another note](01BX5ZZKBKACTAV9WEVGEMMVR0.md)
.fi
.RE
.SH CONFIGURATION
Configuration is stored in TOML format at:
.PP
.RS
.B ~/.config/nx/config.toml
.RE
.PP
Example configuration:
.PP
.RS
.nf
[notes]
directory = "~/Documents/notes"
default_notebook = "inbox"

[editor]
command = "nvim"

[ai]
provider = "openai"
api_key_file = "~/.config/nx/openai_key"

[search]
engine = "sqlite"

[sync]
enabled = true
remote_url = "git@github.com:user/notes.git"
auto_push = false
auto_pull = true
.fi
.RE
.SH ENVIRONMENT VARIABLES
.TP
.B EDITOR
Default editor for note editing (overridden by config)
.TP
.B VISUAL
Visual editor (takes precedence over EDITOR)
.TP
.B XDG_CONFIG_HOME
Configuration directory base (default: ~/.config)
.TP
.B XDG_DATA_HOME
Data directory base (default: ~/.local/share)
.TP
.B NX_CONFIG
Path to configuration file
.TP
.B NX_NOTES_DIR
Notes directory location
.SH EXIT STATUS
.TP
.B 0
Success
.TP
.B 1
General error (invalid arguments, file not found, etc.)
.TP
.B 2
Configuration error
.TP
.B 3
Network error (AI features, sync)
.TP
.B 4
Permission denied
.SH EXAMPLES
.SS "Getting Started"
.TP
Create your first note:
.B nx new "My First Note"
.TP
Launch the interactive TUI:
.B nx ui
.TP
Create a note with organization:
.B nx new "Meeting Notes" --tags work,meeting --nb projects

.SS "Daily Workflows"
.TP
Daily journal entry:
.B nx new "$(date +%Y-%m-%d)" --nb journal --edit
.TP
Quick capture from clipboard:
.B pbpaste | nx new "Quick Capture" --tags inbox
.TP
Meeting preparation:
.B nx new --template meeting --tags "$(date +%Y-%m-%d),team"
.TP
Search for recent work notes:
.B nx ls --tag work --since 2024-01-01 --limit 10

.SS "File Management"
.TP
Attach document to note:
.B nx attach abc123 ~/Documents/presentation.pdf --description "Project slides"
.TP
Import entire directory:
.B nx import dir ~/Documents/notes --nb imported-docs --recursive
.TP
Import Obsidian vault:
.B nx import obsidian ~/MyVault --preserve-structure
.TP
Export notes to PDF:
.B nx export pdf --tag work --since 2024-01-01

.SS "Search and Discovery"
.TP
Search note content:
.B nx grep "machine learning" --ignore-case
.TP
Find todos with regex:
.B nx grep "TODO|FIXME|HACK" --regex
.TP
Search by tags:
.B nx ls --tag AI --tag python
.TP
Find notes linking to specific note:
.B nx backlinks abc123

.SS "Git Synchronization"
.TP
Initial setup:
.B nx sync init --remote https://github.com/user/notes.git --user-name "Your Name" --user-email "email@example.com"
.TP
Clone existing notes:
.B nx sync clone https://github.com/user/notes.git
.TP
Daily sync workflow:
.B nx sync sync --message "Daily update $(date +%Y-%m-%d)"
.TP
Resolve sync conflicts:
.B nx sync resolve --resolve-strategy ours
.TP
Check sync status:
.B nx sync status

.SS "AI Integration"
.TP
Ask questions about your notes:
.B nx ask "What did I learn about machine learning last month?"
.TP
Auto-generate tags:
.B nx tag-suggest abc123 --apply
.TP
Rewrite for clarity:
.B nx rewrite abc123 --tone professional --apply
.TP
Extract action items:
.B nx tasks abc123 --priority high
.TP
Generate content outline:
.B nx outline "Deep Learning Fundamentals" --create

.SS "Organization and Maintenance"
.TP
Create notebook structure:
.B nx notebook create "Machine Learning" "AI research and experiments"
.TP
Move notes between notebooks:
.B nx mv abc123 --nb "Machine Learning"
.TP
Bulk tag operations:
.B nx ls --nb inbox | head -10 | xargs -I {} nx tag-suggest {} --apply
.TP
Template management:
.B nx tpl add meeting-template --file ~/templates/meeting.md
.TP
Create backup with compression:
.B nx backup create ~/backups/notes-$(date +%Y%m%d).tar.gz --compress
.TP
System maintenance:
.B nx gc all && nx reindex rebuild && nx doctor
.TP
Health check with fixes:
.B nx doctor --fix --category index,storage

.SS "Advanced Workflows"
.TP
Pipeline processing:
.B nx ls --tag todo | head -5 | xargs -I {} nx tasks {} --priority high
.TP
Automated daily capture:
.B echo "Daily standup: $(date)" | nx new "Standup $(date +%Y-%m-%d)" --nb work --tags standup,$(date +%Y-%m-%d)
.TP
Find and link related notes:
.B nx suggest-links abc123 --apply --threshold 0.8
.TP
Batch export by date:
.B nx export md --since 2024-01-01 --to ~/exports/january-notes/
.TP
Monitor note growth:
.B watch -n 300 'nx ls | wc -l'
.SH FILES
.TP
.B ~/.config/nx/config.toml
Main configuration file
.TP
.B ~/.local/share/nx/
Data directory containing notes and index
.TP
.B ~/.local/share/nx/notes/
Default notes directory
.TP
.B ~/.local/share/nx/attachments/
File attachments storage
.TP
.B ~/.local/share/nx/templates/
Note templates
.TP
.B ~/.local/share/nx/search.db
SQLite full-text search index
.TP
.B ~/.cache/nx/
Temporary files and cache
.SH PERFORMANCE
.B nx
is designed for high performance with large note collections:
.PP
.RS
- Note operations: P95 < 50ms on 10,000 notes (improved from 100ms)
- Search queries: P95 < 200ms
- Full reindex: < 45 seconds on mid-range laptop
- Memory usage: < 100MB for typical operations
- TUI operations: < 50ms response time
- Cursor movement: < 10ms
- Large file support: 1GB+ with virtual scrolling
.RE
.SH SECURITY
When encryption is enabled:
.PP
.RS
- Uses age/rage encryption for individual files
- No plaintext written to persistent storage
- Keys stored with 0600 permissions
- Atomic file operations prevent corruption
.RE
.SH BUGS
Report bugs at: https://github.com/user/nx/issues
.SH AUTHOR
Written by the nx development team.
.SH SEE ALSO
.BR git (1),
.BR grep (1),
.BR rg (1),
.BR jq (1),
.BR age (1)
.PP
Full documentation: https://nx-notes.dev/docs
.SH COPYRIGHT
This is free software; see the source for copying conditions.