#pragma once

// Auto-generated version header - DO NOT EDIT
// Generated by GitVersion.cmake from version.hpp.in

#include <string>
#include <string_view>

namespace nx {

struct GitVersionInfo {
    static constexpr int major = 1;
    static constexpr int minor = 0;
    static constexpr int patch = 0;
    static constexpr std::string_view prerelease = "";
    static constexpr std::string_view build = "";
    static constexpr std::string_view full = "1.0.0-dev.50161dc+dirty";
    static constexpr std::string_view commit_hash = "50161dc";
    static constexpr bool is_dirty = true;
    static constexpr std::string_view version_type = "development";
    
    // Commits since last tag (0 if on tag, empty string if no tags)
    static constexpr std::string_view commits_since_tag = "0";
    
    // Convenience methods
    static std::string getVersionString() {
        return std::string(full);
    }
    
    static std::string getShortVersion() {
        return std::to_string(major) + "." + std::to_string(minor) + "." + std::to_string(patch);
    }
    
    static bool isRelease() {
        return version_type == "release";
    }
    
    static bool isDevelopment() {
        return version_type == "development" || version_type == "debug";
    }
    
    static bool isCIBuild() {
        return version_type == "ci";
    }
    
    static bool isDirty() {
        return is_dirty;
    }
};

} // namespace nx
